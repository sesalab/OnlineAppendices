import csv
import json
import os
import subprocess

enriched_filepath = "../../../data/repos_enriched.json"
validation_filepath = "../../../data/validation/vccs_mining_validation.csv"

input_dir = "../../../sanity_check/data"
output_dir = "../../../sanity_check/results"

enriched_repos = []
with open(enriched_filepath, "r") as in_file:
    enriched_repos = json.load(in_file)

sample = []
with open(validation_filepath, "r") as in_file:
    sample = list(csv.DictReader(in_file))
true_sample = [s for s in sample if s["judgement"] == "1"]

true_enriched_repos = []
for er in enriched_repos:
    true_er = er.copy()
    true_er["cves"] = []
    for cve in er["cves"]:
        true_cve = cve.copy()
        true_cve["fixes"] = []
        for fix in cve["fixes"]:
            true_fix = fix.copy()
            true_fix["vccs"] = []
            for vcc in fix["vccs"]:
                matched_entry = next((s for s in true_sample if vcc["hash"] == s["vccHash"] and cve["cve"] == s["cve"]), None)
                if matched_entry:
                    true_fix["vccs"].append(vcc)
            if len(true_fix["vccs"]) > 0:
                true_cve["fixes"].append(true_fix)
        if len(true_cve["fixes"]) > 0:
            true_er["cves"].append(true_cve)
    if len(true_er["cves"]) > 0:
        true_enriched_repos.append(true_er)


# Export to Json
with open(os.path.join(input_dir, "repos_enriched.json"), "w") as out_file:
    json.dump(true_enriched_repos, out_file, indent=2)

subprocess.run(["python", "../data_analysis/data_preparation.py", input_dir, output_dir])
subprocess.run(["python", "../data_analysis/rq1.py", input_dir, output_dir])
subprocess.run(["python", "../data_analysis/rq2.py", input_dir, output_dir])
subprocess.run(["python", "../data_analysis/rq3.py", input_dir, output_dir])
subprocess.run(["python", "../data_analysis/rq4.py", input_dir, output_dir])
